name: Enterprise_Chat_Assistant_with_RAG

services:
  api:
    build:
      context: ../apps/api
    env_file:
      - ../apps/api/.env
    ports:
      - "8080:8080"
    volumes:
      - ../apps/api/serviceAccount.json:/app/serviceAccount.json:ro
      - ../data/docs:/data/docs
    environment:
      - CORS_ORIGIN=http://localhost:5173
      - INFERENCE_BASE_URL=http://inference:8000
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:8080/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 20
    depends_on:
      inference:
        condition: service_healthy
    restart: unless-stopped

  inference:
    build:
      context: ../apps/inference
    env_file:
      - ../apps/inference/.env
    ports:
      - "8000:8000"
    volumes:
      - ../data/index:/data/index
      - ../data/docs:/data/docs
    environment:
      - INDEX_DIR=/data/index
      - DOCS_DIR=/data/docs
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY' \nimport urllib.request,sys\ntry:\n  r=urllib.request.urlopen('http://localhost:8000/health',timeout=2)\n  sys.exit(0 if r.status==200 else 1)\nexcept Exception:\n  sys.exit(1)\nPY"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  web:
    build:
      context: ../apps/web
    environment:
      - VITE_API_BASE=http://localhost:8080
    ports:
      - "5173:5173"
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped

  neo4j:
    image: neo4j:5.23
    environment:
      - NEO4J_AUTH=neo4j/pass
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data
    profiles: ["graph"]

volumes:
  neo4j-data: